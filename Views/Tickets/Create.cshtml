@using Microsoft.AspNetCore.Identity
@using Tickest.Enums
@using Tickest.Helpers
@using Tickest.Models.Entities
@using Tickest.Models.ViewModels
@model TicketViewModel

@inject UserManager<Usuario> userManager

@{
    ViewData["Title"] = "Create";
    var user = await userManager.GetUserAsync(User);

    string layoutName = "_Layout";
    if (await userManager.IsInRoleAsync(user, "Gerenciador"))
    {
        layoutName = "_LayoutGerenciador";
    }
    else if (await userManager.IsInRoleAsync(user, "Cliente"))
    {
        layoutName = "_LayoutCliente";
    }

    Layout = layoutName;
}

<style>
    .fa {
        color: red;
        font-size: 20px;
        margin-left: 3px;
    }

    .name {
        margin: 3px;
        color: #696cff !important;
    }
</style>

<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <div class="row">
            <div class="col-md-6">
                <div class="card mb-4">
                    <h5 class="card-header">Criação de Ticket</h5>
                    <div class="card-body demo-vertical-spacing demo-only-element">

                        <form asp-action="Create" method="post" enctype="multipart/form-data">
                            @Html.AntiForgeryToken()

                            <div class="mb-3">
                                <label asp-for="Ticket.Titulo" class="form-label">Título</label>
                                <input asp-for="Ticket.Titulo" class="form-control" />
                                <span asp-validation-for="Ticket.Titulo" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Ticket.Prioridade" class="form-label">Prioridade</label>
                                <select asp-for="Ticket.Prioridade" class="form-select" aria-label="Prioridade">
                                    <option value="">Escolha...</option>
                                    @foreach (TicketPrioridadeEnum prioridade in Enum.GetValues(typeof(TicketPrioridadeEnum)))
                                    {
                                        <option value="@((int)prioridade)">@prioridade.GetDisplayName()</option>
                                    }
                                </select>
                                <span asp-validation-for="Ticket.Prioridade" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Ticket.Descricao" class="form-label">Descrição</label>
                                <textarea asp-for="Ticket.Descricao" class="form-control" rows="4"></textarea>
                                <span asp-validation-for="Ticket.Descricao" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Ticket.DepartamentoId" class="form-label">Departamento</label>
                                <select asp-for="Ticket.DepartamentoId" class="form-select">
                                    <option value="">Escolha...</option>
                                    @foreach (var departamento in Model.Departamentos)
                                    {
                                        <option value="@departamento.Id">@departamento.Nome</option>
                                    }
                                </select>
                                <span asp-validation-for="Ticket.DepartamentoId" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Ticket.EspecialidadeId" class="form-label">Especialidade</label>
                                <select asp-for="Ticket.EspecialidadeId" class="form-select" id="Especialidades">
                                    <option value="">Escolha...</option>
                                    @foreach (var especialidade in Model.Especialidades)
                                    {
                                        <option value="@especialidade.Id">@especialidade.Nome</option>
                                    }
                                </select>
                                <span asp-validation-for="Ticket.EspecialidadeId" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Anexos</label>
                                <input type="file" name="files" multiple />
                            </div>

                            <button type="submit" class="btn btn-primary">Criar Ticket</button>
                        </form>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            var dt = new DataTransfer();

            $('#anexo').change(function () {
                $("#files").html("");
                for (var i = 0; i < this.files.length; i++) {
                    var file = this.files[i];
                    dt.items.add(file);
                }
                this.files = dt.files;

                for (var i = 0; i < this.files.length; i++) {
                    var file = this.files[i];
                    var name = file.name.toLowerCase();
                    var html = '<div><span>' + name + '</span><i class="fa fa-times" onclick="delRef(' + i + ')" aria-hidden="true"></i></div>';
                    $("#files").append(html);
                }
            });

            $("#btn-anexo").click(function () {
                $("#anexo").click();
            });

            $("#DepartamentoId").change(function () {
                var departamentoId = $(this).val();
                var especialidadesDropdown = $("#EspecialidadeId");

                // Limpa as opções anteriores
                especialidadesDropdown.empty();

                // Adiciona a opção padrão
                especialidadesDropdown.append($('<option></option>').val('').html('Escolha...'));

                // Filtra as especialidades pelo departamento selecionado
                var especialidades = @Html.Raw(Json.Serialize(Model.Especialidades));
                var especialidadesFiltradas = especialidades.filter(function (especialidade) {
                    return especialidade.departamentoId == departamentoId;
                });

                // Adiciona as especialidades filtradas ao dropdown
                especialidadesFiltradas.forEach(function (especialidade) {
                    especialidadesDropdown.append($('<option></option>').val(especialidade.id).html(especialidade.nome));
                });
            });

            function delRef(index) {
                dt.items.remove(index);
                $("#files div").eq(index).remove();
            }
        });
    </script>
}
