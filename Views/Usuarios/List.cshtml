@using Microsoft.AspNetCore.Identity;
@using Tickest.Models.ViewModels;
@using Tickest.Models.Entities;
@model IEnumerable<UsuarioListViewModel>;
@inject UserManager<Usuario> userManager

@{
    Layout = "_LayoutGerenciador";
    ViewData["Title"] = "Tickest - Usuários";

    var user = await userManager.FindByEmailAsync(User.Identity.Name);

    async Task<bool> PodeEditarOuDeletar()
    {
        return await userManager.IsInRoleAsync(user, "Gerenciador");
    }
}

<div class="container-fluid" style="background-color: #ffffff; padding: 20px;">
    <h2>Usuários</h2>
    <p>Usuários cadastrados no sistema:</p>
    <table class="table table-condensed" id="Usuarios">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Email</th>
                <th>Cargo</th>
                <th>Departamento</th>
                <th>Especialidade</th>
                @if (await PodeEditarOuDeletar())
                {
                    <th>Editar</th>
                    <th>Deletar</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var usuario in Model)
            {
                <tr>
                    <td>@usuario.Nome</td>
                    <td>@usuario.Email</td>
                    <td>@usuario.Cargo</td>
                    <td>@usuario.Departamento</td>
                    <td>@usuario.Especialidade</td>
                    @if (await PodeEditarOuDeletar())
                    {
                        <td><a href="@Url.Action("Edit", "Usuarios", new { id = usuario.Id })">Editar</a></td>
                        <td><a href="@Url.Action("Delete", "Usuarios", new { usuarioId = usuario.Id })">Deletar</a></td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            $('#Usuarios').DataTable({
                "ordering": true,
                "paging": true,
                "searching": true,
                "language": {
                    "emptyTable": "Nenhum registro encontrado na tabela",
                    "info": "Mostrando _START_ até _END_ de _TOTAL_ registros",
                    "infoEmpty": "Mostrando 0 até 0 de 0 Registros",
                    "infoFiltered": "(Filtrado de _MAX_ total registros)",
                    "infoPostFix": "",
                    "thousands": ".",
                    "lengthMenu": "Mostrar _MENU_ registros por página",
                    "loadingRecords": "Carregando...",
                    "processing": "Processando...",
                    "zeroRecords": "Nenhum registro encontrado",
                    "search": "Pesquisar",
                    "paginate": {
                        "next": "Próximo",
                        "previous": "Anterior",
                        "first": "Primeiro",
                        "last": "Último"
                    },
                    "aria": {
                        "sortAscending": ": Ordenar colunas de forma ascendente",
                        "sortDescending": ": Ordenar colunas de forma descendente"
                    }
                }
            });
        });
    </script>
}
