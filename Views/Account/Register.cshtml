@using Tickest.Models.ViewModels;
@using Microsoft.AspNetCore.Identity
@using Tickest.Models.Entities;

@inject UserManager<Usuario> userManager
@inject RoleManager<Role> roleManager

@model RegisterViewModel

@{
    Layout = "_LayoutGerenciador";
    ViewBag.Title = "Cadastro";
}

<style>
    .departamento-section {
        display: none;
    }

    .especialidade-section {
        display: none;
    }
</style>



<div class="row">
    <div class="col-md-12">
        <form method="post" asp-action="Register" asp-controller="Account">
            <div asp-validation-summary="All" class="text-danger"></div>
            <!-- Content wrapper -->
            <div class="content-wrapper">
                <!-- Content -->
                <div class="container-xxl flex-grow-1 container-p-y">
                    <div class="row">
                        <!-- Basic -->
                        <div class="col-md-6">
                            <div class="card mb-4">
                                <h5 class="card-header">Adicionar Usuário</h5>
                                <div class="card-body demo-vertical-spacing demo-only-element form-group">

                                    <label asp-for="Nome" class="form-label" for="basic-default-password12">Nome</label>
                                    <div class="input-group">
                                        <input asp-for="Nome" type="text"
                                               class="form-control"
                                               placeholder="Nome do Usuário"
                                               aria-label="Username"
                                               aria-describedby="basic-addon11" />
                                    </div>

                                    <label asp-for="Email" class="form-label" for="basic-default-password12">Email</label>
                                    <div class="input-group">
                                        <input asp-for="Email" type="text"
                                               class="form-control"
                                               placeholder="Email do Usuário"
                                               aria-label="Username"
                                               aria-describedby="basic-addon11" />
                                    </div>

                                    <label asp-for="Senha" class="form-label" for="basic-default-password12">Senha</label>
                                    <div class="input-group">
                                        <input asp-for="Senha" type="password"
                                               class="form-control"
                                               placeholder="Senha do Usuário"
                                               aria-label="Username"
                                               aria-describedby="basic-addon11" />
                                    </div>

                                    <label asp-for="ConfirmarSenha" class="form-label" for="basic-default-password12">Confirme a Senha</label>
                                    <div class="input-group">
                                        <input asp-for="ConfirmarSenha" type="password"
                                               class="form-control"
                                               placeholder="Confirme a Senha"
                                               aria-label="Username"
                                               aria-describedby="basic-addon11" />
                                    </div>
                                    @*
                                    @Html.LabelFor(m => m.FuncaoId, "Atribuição...", new { @class = "control-label esconder-rotulo" })
                                    @Html.DropDownListFor(m => m.FuncaoId, new SelectList(Model.OpcoesFuncoes, "Id", "Nome"), "Selecione...", new { @class = "form-select", id = "funcaoDropdown", onchange = "funcaoAlterada(this);" })

                                    <div id="departamentoDropdownId">
                                    @Html.LabelFor(m => m.DepartamentoId, "Departamento...", new { @class = "control-label esconder-rotulo" })
                                    @Html.DropDownListFor(m => m.DepartamentoId, new SelectList(Model.OpcoesDepartamentos, "Id", "Nome"), "Selecione...", new { @class = "form-select", id = "departamentoDropdown1", onchange = "departamentoAlterado(this);" })
                                    </div> *@

                                    @* <div id="especialidadeDropdownId">
                                    <label asp-for="EspecialidadeId" class="form-label" for="basic-default-password12">Especialidade</label>
                                    <div class="input-group">

                                    <select asp-for="EspecialidadeId" class="form-select" id="especialidadeDropdown">
                                    <option value="">Selecione...</option>
                                    @foreach (var item in ObterEspecialidades(Model.DepartamentoId))
                                    {
                                    <option value="@item.Id">@item.Nome</option>
                                    }
                                    </select>

                                    </div>
                                    </div> *@

                                    <div class="funcao-section">
                                        <label asp-for="FuncaoId" class="form-label">Atribuir função</label>
                                        <select asp-for="FuncaoId" class="form-select" >
                                            <option value="">Selecione ...</option>
                                            @foreach (var funcao in Model.OpcoesFuncoes)
                                            {
                                                <option value="@funcao.Id">@funcao.Nome</option>
                                            }
                                        </select>
                                    </div>

                                    <div class="departamento-section">
                                        <label asp-for="DepartamentoId" class="form-label">Selecione o departamento</label>
                                        <select asp-for="DepartamentoId" class="form-control">
                                            <option value="">Selecione ...</option>
                                        </select>
                                    </div>

                                    <div class="especialidade-section">
                                        <label asp-for="EspecialidadeId" class="form-label">Selecione a especialidade</label>
                                        <select asp-for="EspecialidadeId" class="form-control">
                                            <option value="">Selecione ...</option>
                                        </select>
                                    </div>

                                    <button type="submit" class="btn btn-primary mt-3">Adicionar Usuário</button>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>


@section scripts {
    <script>

        function atualizarDropdownDepartamento(data) {
            console.log('atualizando departamento');
        }

        function obterEspecialidades() {
            return new Promise(function (resolve, reject) {
                $.get(`/Departamentos/ObterEspecialidades`)
                    .done(function (result) {
                        resolve(result);
                    })
                    .fail(function (jqXHR, textStatus, error) {
                        reject(error || textStatus);
                    });
            });
        }

        function obterDepartamentos() {
            return new Promise(function (resolve, reject) {
                $.get(`/Departamentos/ObterDepartamentos`)
                    .done(function (result) {
                        resolve(result);
                    })
                    .fail(function (jqXHR, textStatus, error) {
                        reject(error || textStatus);
                    });
            });
        }

        $(function () {
            $("select#FuncaoId").change(function () {
                var funcaoId = $(this).val();
                $.get(`/Account/PodeSelecionarDepartamento?roleId=${funcaoId}`, (data) => {
                    $(".departamento-section").css("display", (data.result ? "block" : "none"))

                    $("select#DepartamentoId").empty();
                    if (data.result) {
                        $.get(`/Departamentos/ObterDepartamentos`, (departamentos) => {
                            $("select#DepartamentoId").append(`<option value="">Selecione ...</option>`);
                            $.each(departamentos, function (i, item) {
                                $("select#DepartamentoId").append(`<option value="${item.id}">${item.nome}</option>`);
                            }); 
                        })
                    } 
                });
            });

            $("select#DepartamentoId").change(function () {
                var departamentoId = $(this).val();
                console.log('departamento selecionado ', departamentoId)

                $("select#EspecialidadeId").empty();
                $.get(`/Especialidade/ObterEspecialidadesPorDepartamento?departamentoId=${departamentoId}`, (especialidades) => {
                    console.log('retorno especialidades', especialidades)
                    $(".especialidade-section").css("display", (especialidades && especialidades.length > 0 ? "block" : "none"))
                    if(especialidades){
                        $("select#EspecialidadeId").append(`<option value="">Selecione ...</option>`);
                        $.each(especialidades, function (i, item) {
                            $("select#EspecialidadeId").append(`<option value="${item.id}">${item.nome}</option>`);
                        });
                    }
                })
            })
        });
    </script>
}


<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.2.1.min.js"></script>



@*
<script type="text/javascript">

    document.getElementById('departamentoDropdownId').style.display = 'none';
    document.getElementById('especialidadeDropdownId').style.display = 'none';

    function funcaoAlterada(element) {
        if (!element.value) {
            document.getElementById('departamentoDropdownId').style.display = 'none';
            return;
        }

        var textoSelecionado = element.options[element.selectedIndex].text;
        document.getElementById('departamentoDropdownId').style.display = textoSelecionado == 'Cliente' ? 'none' : 'block';
    }

    function departamentoAlterado(element) {
        if (!element.value) {
            document.getElementById('especialidadeDropdownId').style.display = 'none';
            return;
        }

        document.getElementById('especialidadeDropdownId').style.display = 'block';
    }

</script> *@


